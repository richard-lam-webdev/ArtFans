name: Build and Deploy to GKE

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

env:
  PROJECT_ID:   ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER:  ${{ secrets.GKE_CLUSTER_NAME }}
  GKE_ZONE:     ${{ secrets.GKE_CLUSTER_ZONE }}
  REGISTRY_URL: ${{ secrets.REGISTRY_URL }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{ env.REGISTRY_URL }}

      - name: Build Backend
        run: |
          cd backend
          IMAGE="${{ env.REGISTRY_URL }}/${{ env.PROJECT_ID }}/artfans/artfans-api:${{ github.sha }}"
          docker build -t "$IMAGE" .
          docker tag "$IMAGE" "${{ env.REGISTRY_URL }}/${{ env.PROJECT_ID }}/artfans/artfans-api:latest"
          docker push "$IMAGE"
          docker push "${{ env.REGISTRY_URL }}/${{ env.PROJECT_ID }}/artfans/artfans-api:latest"

      - name: Build Frontend
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'

      - name: Build Flutter Web & Docker
        run: |
          cd frontend
          flutter pub get
          flutter build web --release
          IMAGE="${{ env.REGISTRY_URL }}/${{ env.PROJECT_ID }}/artfans/artfans-web:${{ github.sha }}"
          docker build -t "$IMAGE" .
          docker tag "$IMAGE" "${{ env.REGISTRY_URL }}/${{ env.PROJECT_ID }}/artfans/artfans-web:latest"
          docker push "$IMAGE"
          docker push "${{ env.REGISTRY_URL }}/${{ env.PROJECT_ID }}/artfans/artfans-web:latest"

      - name: Setup Kubectl
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location:     ${{ env.GKE_ZONE }}
          project_id:   ${{ env.PROJECT_ID }}

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f kubernetes/namespace.yml
          kubectl apply -f kubernetes/storage/
          kubectl apply -f kubernetes/backend/deployment-cloudsql.yml
          kubectl apply -f kubernetes/frontend/

      - name: Deploy to GKE
        run: |
          kubectl set image deployment/artfans-api \
            api=${{ env.REGISTRY_URL }}/${{ env.PROJECT_ID }}/artfans/artfans-api:${{ github.sha }} \
            -n artfans
          kubectl set image deployment/artfans-web \
            web=${{ env.REGISTRY_URL }}/${{ env.PROJECT_ID }}/artfans/artfans-web:${{ github.sha }} \
            -n artfans
          kubectl rollout status deployment/artfans-api -n artfans
          kubectl rollout status deployment.artfans-web -n artfans
