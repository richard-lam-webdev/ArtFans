# .github/workflows/ci.yml
name: CI ARTFANS

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # 1) Lint & Tests Go
  go-check:
    name: Go Lint & Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Go modules
        working-directory: backend
        run: go mod download

      - name: Go fmt & vet
        working-directory: backend
        run: |
          go fmt ./...
          go vet ./...

      - name: Go unit tests
        working-directory: backend
        run: |
          go test ./... -coverprofile=coverage.out

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: go-coverage-report
          path: backend/coverage.out

  # 2) Analyse Flutter (sans test)
  flutter-analyze:
    name: Flutter Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # ← Crée un .env avant analyse
      - name: Copy dummy .env
        run: cp frontend/.env.example frontend/.env

      - name: Cache Flutter Pub
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-pub-${{ hashFiles('frontend/pubspec.yaml') }}

      - name: Cache Dart Tool
        uses: actions/cache@v3
        with:
          path: frontend/.dart_tool
          key: ${{ runner.os }}-dart-tool-${{ hashFiles('frontend/pubspec.yaml') }}

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches/build-cache-1
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('frontend/android/gradle.properties') }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'

      - name: Install Flutter dependencies
        working-directory: frontend
        run: flutter pub get

      - name: Dart analyze
        working-directory: frontend
        run: flutter analyze

  # 3) Build & Upload Artifacts (Flutter + Go)
  build-and-upload:
    name: Build & Upload Artifacts
    needs: [ go-check, flutter-analyze ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          build-tools: '34.0.0'
          cmake: '3.22.1'
          ndk: '27.0.12077973'

      - name: Decode and restore Android keystore
        run: |
          mkdir -p frontend
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > frontend/artfans.jks

      - name: Generate key.properties
        run: |
          cat <<EOF > frontend/key.properties
          storeFile=artfans.jks
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          EOF

      - name: Copy dummy .env
        run: cp frontend/.env.example frontend/.env

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'

      - name: Build Android APK
        working-directory: frontend
        run: flutter build apk --release

      - name: Build Web bundle
        working-directory: frontend
        run: flutter build web --release


      # Go build
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Go modules (pour le build)
        working-directory: backend
        run: go mod download

      - name: Build Go binary
        working-directory: backend
        run: go build -o bin/artfans-server ./cmd/server

      # Upload artifacts
      - name: Upload Flutter APK
        uses: actions/upload-artifact@v4
        with:
          name: flutter-apk
          path: frontend/build/app/outputs/flutter-apk/app-release.apk

      - name: Upload Flutter Web
        uses: actions/upload-artifact@v4
        with:
          name: flutter-web
          path: frontend/build/web

      - name: Upload Go Binary
        uses: actions/upload-artifact@v4
        with:
          name: go-binary
          path: backend/bin/artfans-server
